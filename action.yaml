name: github-actions-slack-notifier
description: Slack notifications for github actions workflows

inputs:
    app_name:
      description: Name of tenant app_name to deploy to, e.g. testapp1
      required: true
      type: string
      default: ${{ github.repository }}
    env_name:
      description: Name of tenant env to deploy to, e.g. dev
      required: true
      type: string
      default: ${{github.ref}}
    type:
      description: Message type to be sent, supported values 'start', 'end', 'failed', 'custom'
      required: true
      type: string
      default: end
    channel_id:
      description: Slack channel id to send messages
      required: true
      type: string
    slack_bot_token:
      description: Slack bot token oauth secret
      required: true
      type: string
    slack_webhook_url:
      description: slack incoming webhook url
      required: false
      type: string
    ref:
      description: Deployment ref
      required: false
      type: string
    message:
      description: Custom message when inputs.type is set to 'custom'
      required: false
      type: string
      default: ':ok_hand: Action on branch ${{github.ref}} is triggered'
    color:
      description: The color of the slack message
      required: false
      type: string
      default: '#dbab09'
    mentions:
      description: Slack users or groups to mention in the message
      required: false
      type: string
      default: ''
    update_ts:
      description: Message ts for updating sent messages
      required: false
      type: string
outputs:
  ts:
    description: Slack ts for updating messages
    value: ${{ steps.slack.outputs.ts }}

runs:
  using: composite
  steps:
    - name: Set BRANCH variable
      id: set-branch
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          BRANCH="${{ github.event.pull_request.head.ref }}"
        else
          BRANCH="${{ github.ref }}"
          BRANCH="${BRANCH#refs/heads/}"
        fi
        echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
    - name: Get Unix Timestamp
      id: timestamp-step
      shell: bash
      run: echo "timestamp=$(date +%s)" >> $GITHUB_ENV
    - id: slack
      uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN }}
        MESSAGE: >-
          {
            "start": {
              "attachments": [
                {
                  "color": "#dbab09",
                  "fallback": "${{ inputs.app_name }} ${{ inputs.env_name }}: start",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{ inputs.app_name }} ${{ inputs.env_name }}: Deploy started - ${{ inputs.ref }} ${{ inputs.mentions }}"
                      },
                      "accessory": {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Github Actions",
                          "emoji": true
                        },
                        "value": "click",
                        "url": "${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}",
                        "action_id": "button-action"
                      }
                    }
                  ]
                }
              ]
            },
            "end": {
              "attachments": [
                {
                  "color": "#dbab09",
                  "fallback": "${{ inputs.app_name }} ${{ inputs.env_name }}: end",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{ inputs.app_name }} ${{ inputs.env_name }}: Deploy complete - ${{ inputs.ref }} ${{ inputs.mentions }}"
                      },
                      "accessory": {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Github Actions",
                          "emoji": true
                        },
                        "value": "click",
                        "url": "${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}",
                        "action_id": "button-action"
                      }
                    }
                  ]
                }
              ]
            },
            "failed": {
              "attachments": [
                {
                  "color": "#a72841",
                  "fallback": "${{ inputs.app_name }} ${{ inputs.env_name }}: failed",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{ inputs.app_name }} ${{ inputs.env_name }}: Deploy failed - ${{ inputs.ref }} ${{ inputs.mentions }}"
                      },
                      "accessory": {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Github Actions",
                          "emoji": true
                        },
                        "value": "click",
                        "url": "${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}",
                        "action_id": "button-action"
                      }
                    }
                  ]
                }
              ]         
            },
            "default": {
              "attachments": [
                {
                  "color": " ${{ job.status == 'success' && '#28a745' || '#a72841' }}",
                  "fields": [
                    {
                      "title": "Job ${{ job.name }} ${{ job.status == 'success' && '✅' || '❌' }} ${{ job.status }}",
                      "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} | ${{ github.job }}>",
                      "short": true
                    },
                    {
                      "title": "Actor",
                      "value": "<https://github.com/${{ github.actor }} | ${{ github.actor }}>",
                      "short": true
                    },
                    {
                      "title": "${{ github.event_name == 'pull_request' && 'Pull Request' || 'Branch' }}",
                      "value": "${{ github.event_name == 'pull_request' && format('<{0} | {1}>', github.event.pull_request.html_url, github.event.pull_request.title) || format('<https://github.com/{0}/commit/{1} | {2}>', github.repository, github.sha, env.BRANCH)}}",
                      "short": true
                    },
                    {
                      "title": "Event",
                      "value": "${{ github.event_name }} and conclusion: ${{ github.event.workflow_run.conclusion }} ",
                      "short": true
                    }
                  ],
                  "footer_icon": "https://github.githubassets.com/favicon.ico",
                  "footer": "<https://github.com/${{ github.repository }} | ${{ github.repository }}>",
                  "ts": ${{ env.timestamp }}
                }
              ]
            },
            "custom": {
              "attachments": [
                {
                  "color": "#28a745",
                  "fallback": "${{ inputs.app_name }} ${{ inputs.env_name }}: custom",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "${{ inputs.app_name }} ${{ inputs.env_name }}: ${{ inputs.message }}"
                      },
                      "accessory": {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "Github Actions",
                          "emoji": true
                        },
                        "value": "click",
                        "url": "${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}",
                        "action_id": "button-action"
                      }
                    }
                  ]
                }
              ]
            }
          }
      with:
        channel-id: ${{ inputs.channel_id }}
        payload: ${{ toJSON(fromJson(env.MESSAGE)[inputs.type]) }}
        update-ts: ${{ inputs.update_ts }}